[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "facterpy"
version = "1.0.0"
description = "Python library to provide a cached and dictionary-like interface to Puppet's facter utility"
readme = "README.md"
license = {text = "BSD-3-Clause"}
authors = [
    {name = "Kali Norby"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: BSD License",
    "Topic :: System :: Systems Administration",
    "Intended Audience :: System Administrators",
    "Operating System :: POSIX",
    "Operating System :: MacOS :: MacOS X",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
keywords = ["facter", "puppet", "ruby", "system", "facts"]
requires-python = ">=3.8"
dependencies = []

[project.optional-dependencies]
dev = [
    "black",
    "ruff",
    "mypy",
    "pytest",
    "pytest-cov",
    "pre-commit",
    "tox",
]

[project.urls]
Homepage = "https://github.com/knorby/facterpy"
Repository = "https://github.com/knorby/facterpy"
Issues = "https://github.com/knorby/facterpy/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["facter*"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.ruff]
target-version = "py38"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = []

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = false
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_decorators = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=facter --cov-report=term-missing --cov-report=html"

[tool.coverage.run]
source = ["facter"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
